{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\JOHN\\\\APR19\\\\Ichnaea\\\\node_modules\\\\@expo\\\\vector-icons\\\\build\\\\createIconSet.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport * as Font from 'expo-font';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport createIconSet from './vendor/react-native-vector-icons/lib/create-icon-set';\nimport createIconButtonComponent from './vendor/react-native-vector-icons/lib/icon-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport { DEFAULT_ICON_COLOR, DEFAULT_ICON_SIZE } from './vendor/react-native-vector-icons/lib/create-icon-set';\nexport default function (glyphMap, fontName, expoAssetId, fontStyle) {\n  var _Icon;\n  var font = _defineProperty({}, fontName, expoAssetId);\n  var RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n  return _Icon = function (_React$Component) {\n    function Icon() {\n      var _this;\n      _classCallCheck(this, Icon);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, Icon, [].concat(args));\n      _this._mounted = false;\n      _this.state = {\n        fontIsLoaded: Font.isLoaded(fontName)\n      };\n      return _this;\n    }\n    _inherits(Icon, _React$Component);\n    return _createClass(Icon, [{\n      key: \"componentDidMount\",\n      value: function () {\n        var _componentDidMount = _asyncToGenerator(function* () {\n          this._mounted = true;\n          if (!this.state.fontIsLoaded) {\n            yield Font.loadAsync(font);\n            this._mounted && this.setState({\n              fontIsLoaded: true\n            });\n          }\n        });\n        function componentDidMount() {\n          return _componentDidMount.apply(this, arguments);\n        }\n        return componentDidMount;\n      }()\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._mounted = false;\n      }\n    }, {\n      key: \"setNativeProps\",\n      value: function setNativeProps(props) {\n        if (this._icon) {\n          this._icon.setNativeProps(props);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        if (__DEV__ && this.props.name && !(this.props.name in glyphMap)) {\n          console.warn(`\"${this.props.name}\" is not a valid icon name for family \"${fontName}\"`);\n        }\n        if (!this.state.fontIsLoaded) {\n          return _jsxDEV(Text, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 24\n          }, this);\n        }\n        return _jsxDEV(RNVIconComponent, _objectSpread({\n          ref: function ref(view) {\n            _this2._icon = view;\n          }\n        }, this.props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this);\n      }\n    }]);\n  }(React.Component), _Icon.defaultProps = RNVIconComponent.defaultProps, _Icon.Button = createIconButtonComponent(_Icon), _Icon.glyphMap = glyphMap, _Icon.getRawGlyphMap = function () {\n    return glyphMap;\n  }, _Icon.getFontFamily = function () {\n    return fontName;\n  }, _Icon.loadFont = function () {\n    return Font.loadAsync(font);\n  }, _Icon.font = font, _Icon;\n}","map":{"version":3,"names":["Font","React","Text","createIconSet","createIconButtonComponent","jsxDEV","_jsxDEV","DEFAULT_ICON_COLOR","DEFAULT_ICON_SIZE","glyphMap","fontName","expoAssetId","fontStyle","_Icon","font","_defineProperty","RNVIconComponent","_React$Component","Icon","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_mounted","state","fontIsLoaded","isLoaded","_inherits","_createClass","key","value","_componentDidMount","_asyncToGenerator","loadAsync","setState","componentDidMount","apply","componentWillUnmount","setNativeProps","props","_icon","render","_this2","__DEV__","name","console","warn","fileName","_jsxFileName","lineNumber","columnNumber","_objectSpread","ref","view","Component","defaultProps","Button","getRawGlyphMap","getFontFamily","loadFont"],"sources":["C:\\Users\\JOHN\\APR19\\Ichnaea\\node_modules\\@expo\\vector-icons\\src\\createIconSet.tsx"],"sourcesContent":["import * as Font from 'expo-font';\nimport React, { ComponentClass } from 'react';\nimport {\n  Text,\n  TextProps,\n  TouchableHighlightProps,\n  ViewProps,\n  OpaqueColorValue,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport createIconSet from './vendor/react-native-vector-icons/lib/create-icon-set';\nimport createIconButtonComponent from './vendor/react-native-vector-icons/lib/icon-button';\n\nexport {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from './vendor/react-native-vector-icons/lib/create-icon-set';\n\nexport interface IconProps<GLYPHS extends string> extends TextProps {\n  /**\n   * Size of the icon, can also be passed as fontSize in the style object.\n   *\n   * @default 12\n   */\n  size?: number;\n\n  /**\n   * Name of the icon to show\n   *\n   * See Icon Explorer app\n   * {@link https://expo.github.io/vector-icons/}\n   */\n  name: GLYPHS;\n\n  /**\n   * Color of the icon. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   */\n  color?: string | OpaqueColorValue;\n}\n\nexport interface IconButtonProps<GLYPHS extends string>\n  extends IconProps<GLYPHS>,\n    ViewProps,\n    TouchableHighlightProps {\n  /**\n   * Text and icon color\n   * Use iconStyle or nest a Text component if you need different colors.\n   * Can be a string or OpaqueColorValue (returned from PlatformColor(..))\n   *\n   *  @default 'white'\n   */\n  color?: string | OpaqueColorValue;\n\n  /**\n   * Border radius of the button\n   * Set to 0 to disable.\n   *\n   * @default 5\n   */\n  borderRadius?: number;\n\n  /**\n   * Styles applied to the icon only\n   * Good for setting margins or a different color.\n   *\n   * @default {marginRight: 10}\n   */\n  iconStyle?: TextStyle;\n\n  /**\n   * Style prop inherited from TextProps and TouchableWithoutFeedbackProperties\n   * Only exist here so we can have ViewStyle or TextStyle\n   *\n   */\n  style?: ViewStyle | TextStyle;\n\n  /**\n   * Background color of the button. Can be a string or OpaqueColorValue (returned from\n   * PlatformColor(..))\n   *\n   * @default '#007AFF'\n   */\n  backgroundColor?: string | OpaqueColorValue;\n}\n\nexport type GlyphMap<G extends string> = { [K in G]: number | string };\n\nexport interface Icon<G extends string, FN extends string> {\n  defaultProps: any;\n  Button: ComponentClass<IconButtonProps<G>>;\n  glyphMap: GlyphMap<G>;\n  getRawGlyphMap: () => GlyphMap<G>;\n  getFontFamily: () => FN;\n  loadFont: () => Promise<void>;\n  font: { [x: string]: any };\n  new (props: IconProps<G>): React.Component<IconProps<G>>;\n}\n\nexport default function <G extends string, FN extends string>(\n  glyphMap: GlyphMap<G>,\n  fontName: FN,\n  expoAssetId,\n  fontStyle?: any\n): Icon<G, FN> {\n  const font = { [fontName]: expoAssetId };\n  const RNVIconComponent = createIconSet(glyphMap, fontName, null, fontStyle);\n\n  return class Icon extends React.Component<IconProps<G>> {\n    static defaultProps = RNVIconComponent.defaultProps;\n    static Button = createIconButtonComponent(Icon);\n    static glyphMap = glyphMap;\n    static getRawGlyphMap = () => glyphMap;\n    static getFontFamily = () => fontName;\n    static loadFont = () => Font.loadAsync(font);\n    static font = font;\n\n    _mounted = false;\n    _icon?: any;\n\n    state = {\n      fontIsLoaded: Font.isLoaded(fontName),\n    };\n\n    async componentDidMount() {\n      this._mounted = true;\n      if (!this.state.fontIsLoaded) {\n        await Font.loadAsync(font);\n        /* eslint-disable react/no-did-mount-set-state */\n        this._mounted && this.setState({ fontIsLoaded: true });\n      }\n    }\n\n    componentWillUnmount() {\n      this._mounted = false;\n    }\n\n    setNativeProps(props) {\n      if (this._icon) {\n        this._icon.setNativeProps(props);\n      }\n    }\n\n    render() {\n      if (__DEV__ && this.props.name && !(this.props.name in glyphMap)) {\n        console.warn(`\"${this.props.name}\" is not a valid icon name for family \"${fontName}\"`);\n      }\n\n      if (!this.state.fontIsLoaded) {\n        return <Text />;\n      }\n\n      return (\n        <RNVIconComponent\n          ref={(view) => {\n            this._icon = view;\n          }}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}